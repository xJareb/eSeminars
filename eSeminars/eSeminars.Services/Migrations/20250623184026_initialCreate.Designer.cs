// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eSeminars.Services.Database;

#nullable disable

namespace eSeminars.Services.Migrations
{
    [DbContext(typeof(ESeminarsContext))]
    [Migration("20250623184026_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eSeminars.Services.Database.Dojmovi", b =>
                {
                    b.Property<int>("DojamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DojamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DojamId"));

                    b.Property<DateTime>("DatumKreiranjaDojma")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    b.HasKey("DojamId")
                        .HasName("PK__Dojmovi__FDF96C5061A3D04D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SeminarId");

                    b.ToTable("Dojmovi", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Kategorije", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategorijaId"));

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("KategorijaId")
                        .HasName("PK__Kategori__6C3B8FCE05ED5B27");

                    b.ToTable("Kategorije", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Korisnici", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Uloga")
                        .HasColumnType("int");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnic__80B06D612299F206");

                    b.HasIndex("Uloga");

                    b.ToTable("Korisnici", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Materijali", b =>
                {
                    b.Property<int>("MaterijalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterijalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterijalId"));

                    b.Property<DateTime>("DatumDodavanja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Putanja")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    b.HasKey("MaterijalId")
                        .HasName("PK__Materija__FB5CCBBD4A744600");

                    b.HasIndex("SeminarId");

                    b.ToTable("Materijali", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Obavijesti", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ObavijestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObavijestId"));

                    b.Property<DateTime>("DatumObavijesti")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ObavijestId")
                        .HasName("PK__Obavijes__99D330C0CEB7A3B7");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Obavijesti", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Predavaci", b =>
                {
                    b.Property<int>("PredavacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PredavacID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredavacId"));

                    b.Property<string>("Biografija")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PredavacId")
                        .HasName("PK__Predavac__3C1813706CF8DCCA");

                    b.ToTable("Predavaci", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Rezervacije", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44FD7D67B779");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SeminarId");

                    b.ToTable("Rezervacije", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.SacuvaniSeminari", b =>
                {
                    b.Property<int>("SacuvaniSeminarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SacuvaniSeminarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SacuvaniSeminarId"));

                    b.Property<DateTime>("DatumSacuvanja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    b.HasKey("SacuvaniSeminarId")
                        .HasName("PK__Sacuvani__0437E3BFA7AB7A53");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SeminarId");

                    b.ToTable("SacuvaniSeminari", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Seminari", b =>
                {
                    b.Property<int>("SeminarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeminarId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PredavacId")
                        .HasColumnType("int")
                        .HasColumnName("PredavacID");

                    b.Property<string>("StateMachine")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Zauzeti")
                        .HasColumnType("int");

                    b.HasKey("SeminarId")
                        .HasName("PK__Seminari__66BB8935083EE2D6");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PredavacId");

                    b.ToTable("Seminari", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Sponzori", b =>
                {
                    b.Property<int>("SponzorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SponzorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponzorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("KontaktOsoba")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SponzorId")
                        .HasName("PK__Sponzori__8161C49A1E97374F");

                    b.ToTable("Sponzori", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.SponzoriSeminari", b =>
                {
                    b.Property<int>("SponzoriSeminariId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SponzoriSeminariID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponzoriSeminariId"));

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("SeminarId")
                        .HasColumnType("int")
                        .HasColumnName("SeminarID");

                    b.Property<int?>("SponzorId")
                        .HasColumnType("int")
                        .HasColumnName("SponzorID");

                    b.HasKey("SponzoriSeminariId")
                        .HasName("PK__Sponzori__BF5AC3214370BF0F");

                    b.HasIndex("SeminarId");

                    b.HasIndex("SponzorId");

                    b.ToTable("SponzoriSeminari", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__DCAB23EBA5488EF0");

                    b.ToTable("Uloge", (string)null);
                });

            modelBuilder.Entity("eSeminars.Services.Database.Dojmovi", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Dojmovis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Dojmovi__Korisni__4D94879B");

                    b.HasOne("eSeminars.Services.Database.Seminari", "Seminar")
                        .WithMany("Dojmovis")
                        .HasForeignKey("SeminarId")
                        .HasConstraintName("FK__Dojmovi__Seminar__4CA06362");

                    b.Navigation("Korisnik");

                    b.Navigation("Seminar");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Korisnici", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Uloge", "UlogaNavigation")
                        .WithMany("Korisnicis")
                        .HasForeignKey("Uloga")
                        .HasConstraintName("FK__Korisnici__Uloga__3B75D760");

                    b.Navigation("UlogaNavigation");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Materijali", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Seminari", "Seminar")
                        .WithMany("Materijalis")
                        .HasForeignKey("SeminarId")
                        .HasConstraintName("FK__Materijal__Semin__5812160E");

                    b.Navigation("Seminar");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Obavijesti", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Obavijestis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Obavijest__Koris__5441852A");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Rezervacije", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Rezervaci__Koris__48CFD27E");

                    b.HasOne("eSeminars.Services.Database.Seminari", "Seminar")
                        .WithMany("Rezervacijes")
                        .HasForeignKey("SeminarId")
                        .HasConstraintName("FK__Rezervaci__Semin__47DBAE45");

                    b.Navigation("Korisnik");

                    b.Navigation("Seminar");
                });

            modelBuilder.Entity("eSeminars.Services.Database.SacuvaniSeminari", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Korisnici", "Korisnik")
                        .WithMany("SacuvaniSeminaris")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__SacuvaniS__Koris__5070F446");

                    b.HasOne("eSeminars.Services.Database.Seminari", "Seminar")
                        .WithMany("SacuvaniSeminaris")
                        .HasForeignKey("SeminarId")
                        .HasConstraintName("FK__SacuvaniS__Semin__5165187F");

                    b.Navigation("Korisnik");

                    b.Navigation("Seminar");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Seminari", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Kategorije", "Kategorija")
                        .WithMany("Seminaris")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Seminari__Katego__440B1D61");

                    b.HasOne("eSeminars.Services.Database.Korisnici", "Korisnik")
                        .WithMany("Seminaris")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Seminari__Korisn__4222D4EF");

                    b.HasOne("eSeminars.Services.Database.Predavaci", "Predavac")
                        .WithMany("Seminaris")
                        .HasForeignKey("PredavacId")
                        .HasConstraintName("FK__Seminari__Predav__4316F928");

                    b.Navigation("Kategorija");

                    b.Navigation("Korisnik");

                    b.Navigation("Predavac");
                });

            modelBuilder.Entity("eSeminars.Services.Database.SponzoriSeminari", b =>
                {
                    b.HasOne("eSeminars.Services.Database.Seminari", "Seminar")
                        .WithMany("SponzoriSeminaris")
                        .HasForeignKey("SeminarId")
                        .HasConstraintName("FK__SponzoriS__Semin__5EBF139D");

                    b.HasOne("eSeminars.Services.Database.Sponzori", "Sponzor")
                        .WithMany("SponzoriSeminaris")
                        .HasForeignKey("SponzorId")
                        .HasConstraintName("FK__SponzoriS__Sponz__5FB337D6");

                    b.Navigation("Seminar");

                    b.Navigation("Sponzor");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Kategorije", b =>
                {
                    b.Navigation("Seminaris");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Korisnici", b =>
                {
                    b.Navigation("Dojmovis");

                    b.Navigation("Obavijestis");

                    b.Navigation("Rezervacijes");

                    b.Navigation("SacuvaniSeminaris");

                    b.Navigation("Seminaris");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Predavaci", b =>
                {
                    b.Navigation("Seminaris");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Seminari", b =>
                {
                    b.Navigation("Dojmovis");

                    b.Navigation("Materijalis");

                    b.Navigation("Rezervacijes");

                    b.Navigation("SacuvaniSeminaris");

                    b.Navigation("SponzoriSeminaris");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Sponzori", b =>
                {
                    b.Navigation("SponzoriSeminaris");
                });

            modelBuilder.Entity("eSeminars.Services.Database.Uloge", b =>
                {
                    b.Navigation("Korisnicis");
                });
#pragma warning restore 612, 618
        }
    }
}
